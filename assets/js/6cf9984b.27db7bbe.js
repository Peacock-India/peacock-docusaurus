"use strict";(self.webpackChunkpeacock_docusaurus=self.webpackChunkpeacock_docusaurus||[]).push([[4714],{2355:e=>{e.exports=JSON.parse('{"label":"backend","permalink":"/peacock-docusaurus/docs/tags/backend","allTagsPath":"/peacock-docusaurus/docs/tags","count":6,"items":[{"id":"Cookie-management","title":"\ud83c\udf6a Authentication Cookie Best Practices","description":"When implementing authentication in your backend application, the usage of cookies for session management is a common approach. Follow these best practices to ensure the security and reliability of authentication cookies.","permalink":"/peacock-docusaurus/docs/authentication-cookie-best-practices"},{"id":"design-rest-api","title":"\ud83d\udcc2 The Importance of a Well-Organized Folder Structure for Developer Teams","description":"Scalable REST APIs play a crucial role in backend development, leveraging HTTP methods, status codes, and hypermedia. It\'s important to follow best practices for URI design, request and response structures, authentication and authorization mechanisms, error handling, and versioning strategies.","permalink":"/peacock-docusaurus/docs/design-scalable-rest-api"},{"id":"folder-structure","title":"\ud83d\udcc2 The Importance of a Well-Organized Folder Structure for Developer Teams","description":"A good folder structure is essential for any team of developers. It helps to keep files organized and easy to find, which can save time and frustration. A well-organized folder structure can also help to improve collaboration, as team members can easily see what files have been created or modified.\\\\","permalink":"/peacock-docusaurus/docs/folder-structure"},{"id":"onion-architecture","title":"\ud83e\uddc5 Understanding Onion Architecture for Backend Development","description":"Onion Architecture is a popular architectural pattern that promotes modular, maintainable, and testable code in backend development. It follows the principles of separation of concerns and dependency inversion, allowing for a highly decoupled and flexible application design.","permalink":"/peacock-docusaurus/docs/onion-architecture-backend"},{"id":"authentication","title":"Secure Authentication Backend Documentation","description":"This document provides an overview of the authentication mechanisms implemented in the backend codebase of the project. It covers the login, registration, and refresh token functionality.","permalink":"/peacock-docusaurus/docs/authentication"},{"id":"request-validation","title":"The Importance of Proper Request Body Validation in API Development","description":"Request Body Validation","permalink":"/peacock-docusaurus/docs/request-body-validation"}]}')}}]);